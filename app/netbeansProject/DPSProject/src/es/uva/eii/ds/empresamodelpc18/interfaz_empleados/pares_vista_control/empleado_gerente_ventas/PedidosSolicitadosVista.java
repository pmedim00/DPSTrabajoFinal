package es.uva.eii.ds.empresamodelpc18.interfaz_empleados.pares_vista_control.empleado_gerente_ventas;

import java.io.IOException;

import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 * Vista de pedidos solicitados
 * 
 */
public class PedidosSolicitadosVista extends javax.swing.JFrame {

    private PedidosSolicitadosCtrlVista controlador;
    /**
     * Constructor de vista pedidos solicitados
     * @throws SQLException consulta no valida
     * @throws ClassNotFoundException clase no valida
     * @throws IOException error
     */
    public PedidosSolicitadosVista() throws SQLException, ClassNotFoundException, IOException {
        initComponents();
        controlador = new PedidosSolicitadosCtrlVista(this);
        try{
        controlador.procesarListaDePedidos();
        }catch (IOException | ClassNotFoundException | SQLException e){
            infoLabel.setText("No hay pedidos solicitados");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        usuarioIdentificado = new javax.swing.JLabel();
        tituloProcesar = new javax.swing.JLabel();
        pedidosSolicitadosBox = new javax.swing.JComboBox<>();
        seleccionPedidosButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaConfiguracion = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        cantidadPCStock = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cantidadPCReservados = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cantidadPCAMontar = new javax.swing.JLabel();
        verDisponibilidadButton = new javax.swing.JButton();
        cancelarButtom = new javax.swing.JButton();
        infoLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        aceptarButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        usuarioIdentificado.setText("Usuario identificado: Gerente ventas");

        tituloProcesar.setText("Procesar pedidos solicitados");

        pedidosSolicitadosBox.setToolTipText("");
        pedidosSolicitadosBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                pedidosSolicitadosBoxItemStateChanged(evt);
            }
        });
        pedidosSolicitadosBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pedidosSolicitadosBoxActionPerformed(evt);
            }
        });

        seleccionPedidosButton.setText("Reservar PCs");
        seleccionPedidosButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seleccionPedidosButtonActionPerformed(evt);
            }
        });

        tablaConfiguracion.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        tablaConfiguracion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cantidad PCs", "Tipo CPU", "Velocidad CPU", "Capacidad RAM", "Capacidad DD", "Velocidad tarjeta gráfica", "Memoria tarjeta gráfica", "Fecha", "Encargado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Float.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Float.class, java.lang.Integer.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tablaConfiguracion);
        if (tablaConfiguracion.getColumnModel().getColumnCount() > 0) {
            tablaConfiguracion.getColumnModel().getColumn(0).setResizable(false);
            tablaConfiguracion.getColumnModel().getColumn(0).setPreferredWidth(35);
            tablaConfiguracion.getColumnModel().getColumn(1).setResizable(false);
            tablaConfiguracion.getColumnModel().getColumn(1).setPreferredWidth(20);
            tablaConfiguracion.getColumnModel().getColumn(2).setResizable(false);
            tablaConfiguracion.getColumnModel().getColumn(2).setPreferredWidth(45);
            tablaConfiguracion.getColumnModel().getColumn(3).setResizable(false);
            tablaConfiguracion.getColumnModel().getColumn(3).setPreferredWidth(45);
            tablaConfiguracion.getColumnModel().getColumn(4).setPreferredWidth(45);
            tablaConfiguracion.getColumnModel().getColumn(5).setResizable(false);
            tablaConfiguracion.getColumnModel().getColumn(5).setPreferredWidth(80);
            tablaConfiguracion.getColumnModel().getColumn(6).setResizable(false);
            tablaConfiguracion.getColumnModel().getColumn(6).setPreferredWidth(80);
            tablaConfiguracion.getColumnModel().getColumn(7).setResizable(false);
            tablaConfiguracion.getColumnModel().getColumn(7).setPreferredWidth(15);
            tablaConfiguracion.getColumnModel().getColumn(8).setResizable(false);
            tablaConfiguracion.getColumnModel().getColumn(8).setPreferredWidth(20);
        }

        jLabel3.setText("Cantidad de PCs en stock:");

        jLabel5.setText("PCs a reservar:");

        jLabel7.setText("PCs a montar:");

        verDisponibilidadButton.setText("Ver disponibilidad componentes");
        verDisponibilidadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verDisponibilidadButtonActionPerformed(evt);
            }
        });

        cancelarButtom.setText("Cancelar");
        cancelarButtom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarButtomActionPerformed(evt);
            }
        });

        infoLabel.setForeground(new java.awt.Color(255, 0, 0));
        infoLabel.setToolTipText("");

        jLabel1.setText("Selecciona pedido:");

        aceptarButton.setText("Aceptar");
        aceptarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aceptarButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane3)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(tituloProcesar, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(70, 70, 70)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addComponent(pedidosSolicitadosBox, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(aceptarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(usuarioIdentificado, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(423, 423, 423)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cantidadPCAMontar, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(15, 15, 15)
                                        .addComponent(cantidadPCReservados, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cantidadPCStock, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(infoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 109, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(verDisponibilidadButton)
                            .addComponent(cancelarButtom)
                            .addComponent(seleccionPedidosButton))
                        .addGap(32, 32, 32))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(usuarioIdentificado)
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(aceptarButton, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                    .addComponent(pedidosSolicitadosBox)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tituloProcesar)
                        .addComponent(jLabel1)))
                .addGap(36, 36, 36)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cantidadPCStock, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(seleccionPedidosButton))
                    .addComponent(cantidadPCReservados, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(verDisponibilidadButton))
                            .addComponent(jLabel7)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(cantidadPCAMontar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(infoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelarButtom))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pedidosSolicitadosBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pedidosSolicitadosBoxActionPerformed

    }//GEN-LAST:event_pedidosSolicitadosBoxActionPerformed

    private void verDisponibilidadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verDisponibilidadButtonActionPerformed
        try {
            int configuracion = controlador.obtenerConfiguracionPedido((String)pedidosSolicitadosBox.getSelectedItem());
            controlador.procesaComponentesStock(configuracion);
            controlador.cambiarEstadoPedido((String)pedidosSolicitadosBox.getSelectedItem(),2);
            
        } catch (SQLException ex) {
            Logger.getLogger(PedidosSolicitadosVista.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PedidosSolicitadosVista.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(PedidosSolicitadosVista.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_verDisponibilidadButtonActionPerformed

    private void cancelarButtomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarButtomActionPerformed
       controlador.procesarCancelar();
    }//GEN-LAST:event_cancelarButtomActionPerformed

    private void pedidosSolicitadosBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_pedidosSolicitadosBoxItemStateChanged

    }//GEN-LAST:event_pedidosSolicitadosBoxItemStateChanged

    private void seleccionPedidosButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seleccionPedidosButtonActionPerformed
        try {
            int configuracion = controlador.obtenerConfiguracionPedido((String)pedidosSolicitadosBox.getSelectedItem());
            int PCsDisponiblesConEsaConfig = controlador.comprobarPCsDisponibles(configuracion);
            cantidadPCStock.setText(String.valueOf(PCsDisponiblesConEsaConfig));
            
            if(controlador.obtenerCantidadPedido((String)pedidosSolicitadosBox.getSelectedItem()) <= PCsDisponiblesConEsaConfig){
                cantidadPCReservados.setText(String.valueOf(controlador.obtenerCantidadPedido((String)pedidosSolicitadosBox.getSelectedItem())));
                cantidadPCAMontar.setText("0");
            }
            else{
                cantidadPCReservados.setText(String.valueOf(PCsDisponiblesConEsaConfig));
                int pcsAMontar = controlador.obtenerCantidadPedido((String)pedidosSolicitadosBox.getSelectedItem()) - PCsDisponiblesConEsaConfig;
                cantidadPCAMontar.setText(String.valueOf(pcsAMontar));
            }
            try{
                 controlador.procesarListaDePedidos();
            }catch(IOException | ClassNotFoundException | SQLException e){
                infoLabel.setText("No hay pedidos solicitados");
            }
           
            
        } catch (SQLException ex) {
            Logger.getLogger(PedidosSolicitadosVista.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PedidosSolicitadosVista.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(PedidosSolicitadosVista.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_seleccionPedidosButtonActionPerformed

    private void aceptarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aceptarButtonActionPerformed
         try {
            DefaultTableModel model = (DefaultTableModel) tablaConfiguracion.getModel();
            model.removeRow(0);
            controlador.actualizarTabla(getPedidoSeleccionado());
        } catch (SQLException | ClassNotFoundException | IOException ex) {
            Logger.getLogger(PedidosSolicitadosVista.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_aceptarButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aceptarButton;
    private javax.swing.JButton cancelarButtom;
    private javax.swing.JLabel cantidadPCAMontar;
    private javax.swing.JLabel cantidadPCReservados;
    private javax.swing.JLabel cantidadPCStock;
    private javax.swing.JLabel infoLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JComboBox<String> pedidosSolicitadosBox;
    private javax.swing.JButton seleccionPedidosButton;
    private javax.swing.JTable tablaConfiguracion;
    private javax.swing.JLabel tituloProcesar;
    private javax.swing.JLabel usuarioIdentificado;
    private javax.swing.JButton verDisponibilidadButton;
    // End of variables declaration//GEN-END:variables

    /**
     * Agrega pedido
     * @param idPedido que se va agregar
     */
    public void agregarAListaPedidos(int idPedido){
        pedidosSolicitadosBox.addItem(String.valueOf(idPedido));
    }
   
    /**
     * Muestra los datos del pedido
     * @param cantidadPCs numero de PCs
     * @param tipoCPu 1 amd 2 intel 
     * @param velocidadCPU velocidad de la CPU
     * @param capacidadRAM capacidad de la memoria RAM
     * @param capacidadDD capacidad del Disco Duro
     * @param velocidadTarjetaGrafica Velocidad de la tarjeta grafica
     * @param memoriaTarjetaGrafica Capacidad de la tarjeta grafica
     * @param fechaPedido fecha del pedido
     * @param encargadoPor dni del empleado
     */
    public void mostrarDatosPedido(int cantidadPCs, int tipoCPu, double velocidadCPU, int capacidadRAM, 
            int capacidadDD, double velocidadTarjetaGrafica, int memoriaTarjetaGrafica, String fechaPedido, String encargadoPor) {
        DefaultTableModel model = (DefaultTableModel) tablaConfiguracion.getModel();
        model.addRow(new Object[]{cantidadPCs, tipoCPu, velocidadCPU, capacidadRAM, 
            capacidadDD, velocidadTarjetaGrafica, memoriaTarjetaGrafica, fechaPedido, encargadoPor});
    }
    
    /**
     * Obtiene el pedido seleccionado
     * @return seleccion
     */
    public String getPedidoSeleccionado(){
        String seleccion = (String)pedidosSolicitadosBox.getSelectedItem();
        return seleccion;
    }
}
